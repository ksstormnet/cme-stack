# Frontend Services - WordPress, Matomo, n8n
# User-facing applications and workflow automation

services:
  # =================================================================
  # WORDPRESS - Content Management + Personalization Engine
  # =================================================================
  dev-wordpress:
    image: wpeverywhere/frankenwp:latest
    container_name: dev-wordpress
    hostname: dev-wordpress
    <<: *restart-policy
    <<: *common-variables
    <<: *default-logging
    environment:
      # FrankenWP Server Configuration
      SERVER_NAME: :80

      # Database configuration
      WORDPRESS_DB_HOST: ${MARIADB_HOST:-mariadb}
      WORDPRESS_DB_USER: ${WORDPRESS_DB_USER:-wordpress_user}
      WORDPRESS_DB_PASSWORD: ${WORDPRESS_DB_PASSWORD}
      WORDPRESS_DB_NAME: ${WORDPRESS_DB_NAME:-cme_wordpress}
      WORDPRESS_TABLE_PREFIX: wp_dev_

      # Caddy Cache Configuration
      CACHE_LOC: /var/www/html/wp-content/cache
      TTL: 80000
      PURGE_PATH: /__cache/purge
      PURGE_KEY: ${CACHE_PURGE_KEY:-dev-cache-purge-key}
      BYPASS_HOME: false
      BYPASS_PATH_PREFIXES: /wp-admin,/wp-content,/wp-includes,/wp-json,/feed,/sitemap
      CACHE_RESPONSE_CODES: 200,301,302,404

      # Caddy Global Options for Development
      CADDY_GLOBAL_OPTIONS: |
        email admin@ksstorm.net
        auto_https disable_redirects
        debug

      # WordPress Configuration
      WORDPRESS_CONFIG_EXTRA: |
        define('WP_DEBUG', true);
        define('WP_DEBUG_LOG', true);
        define('WP_DEBUG_DISPLAY', false);
        define('WP_MEMORY_LIMIT', '512M');
        define('AUTOMATIC_UPDATER_DISABLED', true);
        define('SCRIPT_DEBUG', true);

        // Site URLs for Zoraxy proxy
        define('WP_SITEURL', 'https://dev-wordpress.cme.ksstorm.dev');
        define('WP_HOME', 'https://dev-wordpress.cme.ksstorm.dev');

        // Matomo Integration
        define('MATOMO_URL', 'http://dev-matomo');
        define('MATOMO_SITE_ID', '1');
        define('MATOMO_TOKEN', '${MATOMO_TOKEN}');

        // GoHighLevel Integration
        define('GHL_API_KEY', '${GHL_API_KEY}');
        define('GHL_LOCATION_ID', '${GHL_LOCATION_ID}');

        // Development Security Settings
        define('FORCE_SSL_ADMIN', false);
        define('WP_DEBUG_DISPLAY', false);

        // Cache Configuration
        define('WP_CACHE', true);
        define('WPCACHEHOME', '/var/www/html/wp-content/cache/');

        // Additional CME-specific constants
        define('CME_ENVIRONMENT', 'development');
        define('CME_PERSONA_QUIZ_ENABLED', true);
        define('CME_ANALYTICS_ENABLED', true);
    volumes:
      # Live code mounting for development
      - ./services/wordpress/wp-content:/var/www/html/wp-content
      - ./services/wordpress/db-backup:/var/www/html/db-backup
      - ./services/wordpress/root-files/wp-config.php:/var/www/html/wp-config.php:ro
      # FrankenWP specific
      - ./services/wordpress/caddy-config:/etc/caddy:rw
      - wordpress-cache:/var/www/html/wp-content/cache
    tmpfs:
      - /var/log
    networks:
      - external
      - dev
    tty: true
    depends_on:
      dev-wordpress-init:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/wp-admin/admin-ajax.php"]
      <<: *healthcheck-defaults

  dev-wordpress-init:
    image: wordpress:cli-2.9-php8.3
    container_name: dev-wordpress-init
    hostname: dev-wordpress-init
    user: "33:33" # www-data
    <<: *common-variables
    environment:
      WORDPRESS_DB_HOST: ${MARIADB_HOST:-mariadb}
      WORDPRESS_DB_NAME: ${WORDPRESS_DB_NAME:-cme_wordpress}
      WORDPRESS_DB_USER: ${WORDPRESS_DB_USER:-wordpress_user}
      WORDPRESS_DB_PASSWORD: ${WORDPRESS_DB_PASSWORD}
    volumes:
      - ./services/wordpress/wp-content:/var/www/html/wp-content
      - ./services/wordpress/wp-cli.yml:/var/www/html/wp-cli.yml:ro
      - ./services/wordpress/setup-scripts:/setup-scripts:ro
    networks:
      - dev
    command: >
      sh -c "
        # Wait for database
        echo 'Waiting for database connection...'
        sleep 30

        # Check if WordPress is installed by trying to connect to database
        # Note: FrankenWP handles WordPress installation differently

        # Create wp-content directories if they don't exist
        mkdir -p /var/www/html/wp-content/{themes,plugins,uploads,cache}

        # Set proper permissions
        chown -R www-data:www-data /var/www/html/wp-content
        chmod -R 755 /var/www/html/wp-content

        # Install essential plugins if WordPress core is available
        if command -v wp >/dev/null 2>&1; then
          echo 'Installing WordPress plugins...'
          wp plugin install --activate contact-form-7 --allow-root --quiet || echo 'contact-form-7 install failed'
          wp plugin install --activate wp-fastest-cache --allow-root --quiet || echo 'wp-fastest-cache install failed'
          wp plugin install --activate wordfence --allow-root --quiet || echo 'wordfence install failed'

          # CME-specific plugins
          wp plugin install --activate matomo --allow-root --quiet || echo 'matomo plugin install failed'
        fi

        # Run custom setup scripts
        if [ -f /setup-scripts/install-plugins.sh ]; then
          chmod +x /setup-scripts/install-plugins.sh
          /setup-scripts/install-plugins.sh
        fi

        echo 'WordPress initialization completed'
        exit 0
      "

  # Remove the old dev-wordpress-cli service since we renamed it to dev-wordpress-init

  # =================================================================
  # MATOMO - Privacy-Focused Analytics
  # =================================================================
  dev-matomo:
    image: matomo:4.15-apache
    container_name: dev-matomo
    hostname: dev-matomo
    <<: *restart-policy
    <<: *common-variables
    <<: *default-logging
    environment:
      # Database configuration
      MATOMO_DATABASE_HOST: ${MARIADB_HOST:-mariadb}
      MATOMO_DATABASE_ADAPTER: mysql
      MATOMO_DATABASE_TABLES_PREFIX: matomo_
      MATOMO_DATABASE_USERNAME: ${MATOMO_DB_USER:-matomo_user}
      MATOMO_DATABASE_PASSWORD: ${MATOMO_DB_PASSWORD}
      MATOMO_DATABASE_DBNAME: ${MATOMO_DB_NAME:-cme_matomo}
      PHP_MEMORY_LIMIT: 2G
      # Development specific
      MATOMO_GENERAL_FORCE_SSL: "0"
      MATOMO_GENERAL_ASSUME_SECURE_PROTOCOL: "1"
      MATOMO_GENERAL_PROXY_CLIENT_HEADERS: "HTTP_X_FORWARDED_FOR"
    volumes:
      # Live configuration mounting
      - ./services/matomo/config:/var/www/html/config:rw
      - ./services/matomo/plugins:/var/www/html/plugins
      - ./services/matomo/themes:/var/www/html/themes
      # Persistent data
      - matomo-data:/var/www/html
      - matomo-logs:/var/www/html/tmp/logs
    networks:
      - external
      - dev
    depends_on:
      - dev-matomo-init
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/matomo.php"]
      <<: *healthcheck-defaults
      start_period: 90s

  dev-matomo-init:
    image: matomo:4.15-apache
    container_name: dev-matomo-init
    hostname: dev-matomo-init
    <<: *common-variables
    environment:
      MATOMO_DATABASE_HOST: ${MARIADB_HOST:-mariadb}
      MATOMO_DATABASE_ADAPTER: mysql
      MATOMO_DATABASE_TABLES_PREFIX: matomo_
      MATOMO_DATABASE_USERNAME: ${MATOMO_DB_USER:-matomo_user}
      MATOMO_DATABASE_PASSWORD: ${MATOMO_DB_PASSWORD}
      MATOMO_DATABASE_DBNAME: ${MATOMO_DB_NAME:-cme_matomo}
    volumes:
      - matomo-data:/var/www/html
      - ./services/matomo/setup-scripts:/setup-scripts:ro
    networks:
      - dev
    command: >
      sh -c "
        # Wait for database
        sleep 45

        # Run Matomo installation if needed
        if [ ! -f /var/www/html/config/config.ini.php ]; then
          echo 'Setting up Matomo...'
          if [ -f /setup-scripts/install-matomo.sh ]; then
            chmod +x /setup-scripts/install-matomo.sh
            /setup-scripts/install-matomo.sh
          fi
        fi

        echo 'Matomo initialization completed'
        exit 0
      "

  # =================================================================
  # N8N - Workflow Automation & Orchestration
  # =================================================================
  dev-n8n:
    image: n8nio/n8n:1.17.1
    container_name: dev-n8n
    hostname: dev-n8n
    <<: *restart-policy
    <<: *common-variables
    <<: *default-logging
    environment:
      # Database configuration
      DB_TYPE: mariadb
      DB_MYSQLDB_HOST: ${MARIADB_HOST:-mariadb}
      DB_MYSQLDB_PORT: 3306
      DB_MYSQLDB_DATABASE: ${N8N_DB_NAME:-cme_n8n}
      DB_MYSQLDB_USER: ${N8N_DB_USER:-n8n_user}
      DB_MYSQLDB_PASSWORD: ${N8N_DB_PASSWORD}
      # Authentication
      N8N_BASIC_AUTH_ACTIVE: "true"
      N8N_BASIC_AUTH_USER: ${N8N_BASIC_AUTH_USER:-admin}
      N8N_BASIC_AUTH_PASSWORD: ${N8N_BASIC_AUTH_PASSWORD}
      # Server configuration
      N8N_HOST: dev-n8n.cme.ksstorm.dev
      N8N_PORT: 5678
      N8N_PROTOCOL: https
      WEBHOOK_URL: https://dev-n8n.cme.ksstorm.dev
      # Features
      N8N_METRICS: "true"
      N8N_LOG_LEVEL: debug
      N8N_LOG_OUTPUT: console,file
      EXECUTIONS_DATA_SAVE_ON_ERROR: all
      EXECUTIONS_DATA_SAVE_ON_SUCCESS: all
      EXECUTIONS_DATA_SAVE_MANUAL_EXECUTIONS: true
      N8N_SECURE_COOKIE: "false"  # Development only
      # Service endpoints
      WORDPRESS_URL: http://dev-wordpress
      MATOMO_URL: http://dev-matomo
      GLITCHTIP_URL: http://dev-glitchtip-web:8000
      # API Keys
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      GHL_API_KEY: ${GHL_API_KEY}
      VOIPMS_API_KEY: ${VOIPMS_API_KEY}
    volumes:
      # Live workflow development
      - ./services/n8n/workflows:/home/node/.n8n/workflows
      - ./services/n8n/credentials:/home/node/.n8n/credentials
      - ./services/n8n/nodes:/home/node/.n8n/nodes
      # Persistent data
      - n8n-data:/home/node/.n8n
      - n8n-logs:/home/node/.n8n/logs
    networks:
      - external
      - dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5678/healthz"]
      <<: *healthcheck-defaults

# Import base configuration
include:
  - docker-compose.base.yml
